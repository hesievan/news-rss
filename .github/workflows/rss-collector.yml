name: RSS 内容收集与筛选及GitHub Pages部署

on:
  schedule:
    # 每6小时运行一次 (UTC时间)
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      debug:
        description: '启用调试模式'
        required: false
        default: 'false'

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  collect-and-filter:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 收集RSS内容
      run: |
        python src/collect_rss.py
        
    - name: 过滤新闻
      run: |
        python src/filter_news.py
        
    - name: 生成GitHub Pages
      run: |
        python src/generate_github_pages.py
        
    - name: 提交结果
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/ docs/
        git diff --staged --quiet || git commit -m "自动更新RSS筛选结果及GitHub Pages - $(date -u +%Y-%m-%d_%H:%M:%S)"
        git push
        
    - name: 上传结果作为构件
      uses: actions/upload-artifact@v3
      with:
        name: filtered-news
        path: |
          output/filtered_news.json
          output/summary.json
    
    - name: 发送飞书通知
      env:
        FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
      run: |
        if [ -n "$FEISHU_WEBHOOK_URL" ]; then
          echo "正在发送飞书通知..."
          python src/notify.py
        else
          echo "未配置飞书webhook，跳过通知"
        fi
          
    - name: 调试信息
      if: github.event.inputs.debug == 'true'
      run: |
        echo "=== 调试信息 ==="
        echo "收集的新闻数量:"
        cat output/raw_news.json | jq '. | length'
        echo "过滤后的新闻数量:"
        cat output/filtered_news.json | jq '. | length'
        echo "来源分布:"
        cat output/filtered_news.json | jq -r '.[].source' | sort | uniq -c | sort -nr

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: collect-and-filter
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: 上传站点内容
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'docs'
        
    - name: 部署到GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
